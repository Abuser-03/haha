import os
from pdf2image import convert_from_path
from pathlib import Path


def convert_pdfs_to_images_recursive(root_folder, output_folder, dpi=300, poppler_path=None):
    """–†–µ–∫—É—Ä—Å–∏–≤–Ω–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤—Å–µ—Ö PDF –≤ –ø–∞–ø–∫–µ –∏ –ø–æ–¥–ø–∞–ø–∫–∞—Ö –≤ PNG"""
    os.makedirs(output_folder, exist_ok=True)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏
    if not os.path.exists(root_folder):
        print(f"‚ùå –ü–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {root_folder}")
        return

    # –ò—â–µ–º –≤—Å–µ PDF —Ñ–∞–π–ª—ã —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ
    pdf_files = []
    for root, dirs, files in os.walk(root_folder):
        for file in files:
            if file.endswith('.pdf'):
                pdf_files.append(os.path.join(root, file))

    if not pdf_files:
        print(f"‚ö†Ô∏è –í –ø–∞–ø–∫–µ {root_folder} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ PDF —Ñ–∞–π–ª–æ–≤")
        return

    print(f"üìÅ –ù–∞–π–¥–µ–Ω–æ {len(pdf_files)} PDF —Ñ–∞–π–ª–æ–≤ –≤ {root_folder}")
    print(f"üìÇ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {output_folder}\n")

    total_pages = 0
    successful_files = 0
    failed_files = 0

    for idx, pdf_path in enumerate(pdf_files, 1):
        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫
        rel_path = os.path.relpath(pdf_path, root_folder)
        rel_dir = os.path.dirname(rel_path)
        filename = os.path.basename(pdf_path)

        # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∞–ø–∫—É –≤ –≤—ã—Ö–æ–¥–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        if rel_dir:
            output_subfolder = os.path.join(output_folder, rel_dir)
            os.makedirs(output_subfolder, exist_ok=True)
        else:
            output_subfolder = output_folder

        print(f"[{idx}/{len(pdf_files)}] üìÑ {rel_path}")

        try:
            # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Å —É—á–µ—Ç–æ–º poppler_path –¥–ª—è macOS
            if poppler_path:
                pages = convert_from_path(pdf_path, dpi=dpi, poppler_path=poppler_path)
            else:
                pages = convert_from_path(pdf_path, dpi=dpi)

            for i, page in enumerate(pages):
                output_filename = f"{filename[:-4]}_page_{i + 1}.png"
                output_path = os.path.join(output_subfolder, output_filename)
                page.save(output_path, 'PNG')
                print(f"  ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ {i + 1}/{len(pages)} ‚Üí {output_filename}")

            total_pages += len(pages)
            successful_files += 1
            print(f"  ‚úì –ì–æ—Ç–æ–≤–æ: {len(pages)} —Å—Ç—Ä–∞–Ω–∏—Ü\n")

        except Exception as e:
            failed_files += 1
            print(f"  ‚ùå –û—à–∏–±–∫–∞: {str(e)}\n")

    print("=" * 60)
    print(f"üéâ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print(f"   ‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {successful_files} —Ñ–∞–π–ª–æ–≤")
    print(f"   ‚ùå –û—à–∏–±–æ–∫: {failed_files} —Ñ–∞–π–ª–æ–≤")
    print(f"   üìÑ –í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü: {total_pages}")
    print(f"   üìÇ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤: {output_folder}")
    print("=" * 60)


def convert_pdfs_flat(root_folder, output_folder, dpi=300, poppler_path=None):
    """–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤—Å–µ—Ö PDF –≤ –æ–¥–Ω—É –ø–ª–æ—Å–∫—É—é –ø–∞–ø–∫—É (–±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã)"""
    os.makedirs(output_folder, exist_ok=True)

    if not os.path.exists(root_folder):
        print(f"‚ùå –ü–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {root_folder}")
        return

    # –ò—â–µ–º –≤—Å–µ PDF —Ñ–∞–π–ª—ã —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ
    pdf_files = []
    for root, dirs, files in os.walk(root_folder):
        for file in files:
            if file.endswith('.pdf'):
                pdf_files.append(os.path.join(root, file))

    if not pdf_files:
        print(f"‚ö†Ô∏è –í –ø–∞–ø–∫–µ {root_folder} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ PDF —Ñ–∞–π–ª–æ–≤")
        return

    print(f"üìÅ –ù–∞–π–¥–µ–Ω–æ {len(pdf_files)} PDF —Ñ–∞–π–ª–æ–≤")
    print(f"üìÇ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {output_folder}\n")

    total_pages = 0
    successful_files = 0
    failed_files = 0

    for idx, pdf_path in enumerate(pdf_files, 1):
        filename = os.path.basename(pdf_path)
        rel_path = os.path.relpath(pdf_path, root_folder)

        print(f"[{idx}/{len(pdf_files)}] üìÑ {rel_path}")

        try:
            if poppler_path:
                pages = convert_from_path(pdf_path, dpi=dpi, poppler_path=poppler_path)
            else:
                pages = convert_from_path(pdf_path, dpi=dpi)

            for i, page in enumerate(pages):
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –≤ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏
                safe_name = rel_path.replace('/', '_').replace('\\', '_')
                output_filename = f"{safe_name[:-4]}_page_{i + 1}.png"
                output_path = os.path.join(output_folder, output_filename)
                page.save(output_path, 'PNG')
                print(f"  ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ {i + 1}/{len(pages)} ‚Üí {output_filename}")

            total_pages += len(pages)
            successful_files += 1
            print(f"  ‚úì –ì–æ—Ç–æ–≤–æ: {len(pages)} —Å—Ç—Ä–∞–Ω–∏—Ü\n")

        except Exception as e:
            failed_files += 1
            print(f"  ‚ùå –û—à–∏–±–∫–∞: {str(e)}\n")

    print("=" * 60)
    print(f"üéâ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print(f"   ‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {successful_files} —Ñ–∞–π–ª–æ–≤")
    print(f"   ‚ùå –û—à–∏–±–æ–∫: {failed_files} —Ñ–∞–π–ª–æ–≤")
    print(f"   üìÑ –í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü: {total_pages}")
    print(f"   üìÇ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤: {output_folder}")
    print("=" * 60)


if __name__ == '__main__':
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏
    PDF_FOLDER = '/Users/georgewashington/Downloads/–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏_02102025'
    OUTPUT_FOLDER = './converted_images'
    DPI = 300

    # –î–ª—è macOS —Å Homebrew Poppler
    POPPLER_PATH = '/opt/homebrew/bin'

    # –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º:

    # # –í–∞—Ä–∏–∞–Ω—Ç 1: –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫
    # print("üîÑ –†–µ–∂–∏–º: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫\n")
    # convert_pdfs_to_images_recursive(
    #     root_folder=PDF_FOLDER,
    #     output_folder=OUTPUT_FOLDER,
    #     dpi=DPI,
    #     poppler_path=POPPLER_PATH
    # )

    # –í–∞—Ä–∏–∞–Ω—Ç 2: –í—Å–µ —Ñ–∞–π–ª—ã –≤ –æ–¥–Ω—É –ø–∞–ø–∫—É (—Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    print("üîÑ –†–µ–∂–∏–º: –í—Å–µ —Ñ–∞–π–ª—ã –≤ –æ–¥–Ω—É –ø–∞–ø–∫—É\n")
    convert_pdfs_flat(
        root_folder=PDF_FOLDER,
        output_folder=OUTPUT_FOLDER,
        dpi=DPI,
        poppler_path=POPPLER_PATH
    )