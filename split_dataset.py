# split_dataset.py
import os
import shutil
from sklearn.model_selection import train_test_split
from tqdm import tqdm


def split_dataset(source_folder, output_folder, val_split=0.2):
    """
    –†–∞–∑–¥–µ–ª—è–µ—Ç –¥–∞—Ç–∞—Å–µ—Ç –Ω–∞ train/val (80/20)
    """
    images_folder = os.path.join(source_folder, 'images')
    labels_folder = os.path.join(source_folder, 'labels')

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    all_images = [f for f in os.listdir(images_folder) if f.endswith('.png')]

    if not all_images:
        print(f"‚ùå –ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ {images_folder}")
        return

    print(f"üìä –í—Å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {len(all_images)}")

    # –†–∞–∑–¥–µ–ª—è–µ–º 80/20
    train_images, val_images = train_test_split(
        all_images,
        test_size=val_split,
        random_state=42
    )

    print(f"üìà Train: {len(train_images)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
    print(f"üìâ Val: {len(val_images)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\n")

    # –°–æ–∑–¥–∞—ë–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    for split, images in [('train', train_images), ('val', val_images)]:
        print(f"üìÅ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ {split}...")

        os.makedirs(f"{output_folder}/{split}/images", exist_ok=True)
        os.makedirs(f"{output_folder}/{split}/labels", exist_ok=True)

        for img in tqdm(images, desc=split):
            # –ö–æ–ø–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            shutil.copy(
                os.path.join(images_folder, img),
                f"{output_folder}/{split}/images/{img}"
            )

            # –ö–æ–ø–∏—Ä—É–µ–º –∞–Ω–Ω–æ—Ç–∞—Ü–∏—é
            label_file = img.replace('.png', '.txt')
            label_path = os.path.join(labels_folder, label_file)

            if os.path.exists(label_path):
                shutil.copy(
                    label_path,
                    f"{output_folder}/{split}/labels/{label_file}"
                )
            else:
                # –ï—Å–ª–∏ –Ω–µ—Ç –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏, —Å–æ–∑–¥–∞—ë–º –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª
                open(f"{output_folder}/{split}/labels/{label_file}", 'w').close()

    print("\n" + "=" * 60)
    print("‚úÖ –î–∞—Ç–∞—Å–µ—Ç —Ä–∞–∑–¥–µ–ª—ë–Ω –Ω–∞ train/val!")
    print("=" * 60)
    print(f"üìÅ Train: {output_folder}/train/")
    print(f"üìÅ Val: {output_folder}/val/")
    print("=" * 60 + "\n")


if __name__ == '__main__':
    print("\n" + "=" * 60)
    print("üìä –†–ê–ó–î–ï–õ–ï–ù–ò–ï –î–ê–¢–ê–°–ï–¢–ê –ù–ê TRAIN/VAL")
    print("=" * 60 + "\n")

    split_dataset(
        source_folder='./data/generated_errors',
        output_folder='./data/dataset',
        val_split=0.2  # 20% –Ω–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—é
    )

    print("üìã –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: —Å–æ–∑–¥–∞–π—Ç–µ data.yaml")